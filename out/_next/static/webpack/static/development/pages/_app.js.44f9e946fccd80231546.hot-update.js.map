{"version":3,"file":"static/webpack/static/development/pages/_app.js.44f9e946fccd80231546.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\nimport App, { Container } from 'next/app';\nimport { createGlobalStyle } from 'styled-components';\nimport config from '../config';\n\nconst { device } = config;\n\nconst GlobalStyle = createGlobalStyle`\n    *,\n    *:before,\n    *:after {\n        box-sizing: border-box;\n    }\n    html {\n        margin: 0;\n        padding: 0;\n        height: 100%;\n        /* border-top: 2px solid #c9cacc; */\n        -webkit-text-size-adjust: 100%;\n        -ms-text-size-adjust: 100%;\n    }\n    body {\n        height: 100%;\n        background-color: #1d1f21;\n        color: #c9cacc;\n        font-weight: 400;\n        font-size: 14px;\n        font-family: 'Quicksand', monospace, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        line-height: 1.725;\n        text-rendering: geometricPrecision;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        margin: 0 auto;\n        max-width: 48rem;\n        padding: 0 2rem;\n\n        @media ${device.mobile} {\n            padding: 0 1rem;\n            margin: 2rem auto;\n        }\n    }\n\n    @font-face {\n        font-family: 'Quicksand';\n        src: url('/static/fonts/Quicksand-Regular.ttf');\n        font-weight: normal;\n        font-display: auto;\n        font-style: normal;\n    }\n\n    @font-face {\n        font-family: 'QuicksandBold';\n        src: url('/static/fonts/Quicksand-Bold.ttf');\n        font-weight: bold;\n        font-display: auto;\n        font-style: normal;\n    }\n\n    @media ${device.mobile} {\n        p {\n            text-align: justify;\n        }\n    }\n\n`;\n\nexport default class MyApp extends App {\n    static async getInitialProps({ Component, ctx }) {\n        let pageProps = {};\n\n        if (Component.getInitialProps) {\n            pageProps = await Component.getInitialProps(ctx);\n        }\n\n        return { pageProps };\n    }\n\n    render() {\n        const { Component, pageProps } = this.props;\n\n        return (\n            <Container>\n                <GlobalStyle />\n                <Component {...pageProps} />\n            </Container>\n        );\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AA0DA;;;;;;;;;;;;;AAWA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;AAnBA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AATA;AACA;;;;;A","sourceRoot":""}